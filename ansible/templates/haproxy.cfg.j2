global
    log 127.0.0.1 local0 notice
    user haproxy
    group haproxy
    chroot  /var/lib/haproxy
    daemon
    stats socket /var/lib/haproxy/stats mode 660 level operator
    maxconn 8000
    tune.ssl.default-dh-param   2048
    pidfile /var/run/haproxy.pid

defaults
    log global
    retries 3
    option      redispatch
    maxconn 8000
    timeout http-request 90s
    timeout queue 90s
    timeout connect 90s
    timeout client 90s
    timeout server 90s
    timeout check 90s
    stats       enable

listen stats
    bind 0.0.0.0:8080
    log global
    mode http
    maxconn 10
    timeout client 1m
    timeout connect 1m
    timeout queue 1m
    timeout server 1m
    stats enable
    stats hide-version
    stats refresh 30s
    stats show-node
    stats uri /

frontend front_nginx
    bind 0.0.0.0:80
    mode http
    default_backend backend_nginx

frontend front_docker
    bind 0.0.0.0:81
    mode http
    default_backend backend_docker

frontend front_wordpress
    bind 0.0.0.0:82
    mode http
    default_backend backend_wordpress

backend backend_nginx
    mode http
    balance roundrobin
    option forwardfor
{% for backend in groups.backends -%}
{% set list1=hostvars[backend].ansible_facts.fqdn.split('-') %}
{% if list1[2] == "gra" %}
    server {{hostvars[backend].ansible_facts.fqdn}} {{ hostvars[backend].ansible_facts.ens3.ipv4.address }}:80 check
{% else %}
    server {{hostvars[backend].ansible_facts.fqdn}} {{ hostvars[backend].ansible_facts.ens3.ipv4.address }}:80 check backup
{% endif %}
{% endfor -%}

backend backend_docker
    mode http
    balance roundrobin
    option forwardfor
{% for backend in groups.backends -%}
{% set list1=hostvars[backend].ansible_facts.fqdn.split('-') %}
{% if list1[2] == "gra" %}
    server {{hostvars[backend].ansible_facts.fqdn}} {{ hostvars[backend].ansible_facts.ens4.ipv4.address }}:8080 check
{% else %}
    server {{hostvars[backend].ansible_facts.fqdn}} {{ hostvars[backend].ansible_facts.ens4.ipv4.address }}:8080 check backup
{% endif %}
{% endfor -%}

backend backend_wordpress
    mode http
    balance roundrobin
    option forwardfor
{% for backend in groups.backends -%}
{% set list1=hostvars[backend].ansible_facts.fqdn.split('-') %}
{% if list1[2] == "gra" %}
    server {{hostvars[backend].ansible_facts.fqdn}} {{ hostvars[backend].ansible_facts.ens4.ipv4.address }}:8000 check
{% else %}
    server {{hostvars[backend].ansible_facts.fqdn}} {{ hostvars[backend].ansible_facts.ens4.ipv4.address }}:8000 check backup
{% endif %}
{% endfor -%}
